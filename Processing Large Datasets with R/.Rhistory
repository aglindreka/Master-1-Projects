geom_hex() + coord_fixed() +  scale_fill_viridis(option = "A") + theme_bw()
df <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(df)
ggplot(data = df, aes(x = bp, y = bmi)) +
stat_density_2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE)
pima_combine %>% ggplot() + geom_histogram(aes(x = bmi, y= ..density..), bins = 50, fill = "pink") +
geom_density(aes(x = bmi), col = "blue") + stat_function(fun = dnorm, args = list(mean = mean(pima_combine$bmi), sd = sd(pima_combine$bmi)))
ggplot(data = df, aes(x = bmi)) +
geom_histogram(aes(y = ..density..), bins = 60) +
stat_function(fun = dnorm,
args = list(mean = mean(df$bmi, na.rm = TRUE),
sd = sd(df$bmi, na.rm = TRUE)),
lwd = 1,
col = 'red') +
expand_limits(x = 0)
da_frame %>% ggplot(aes(x = seq_data, y = accdeaths)) + geom_line()
ggplot(accd, aes(x = year, y = deaths)) +
geom_line() +
geom_point(data = accd[which.min(accd$deaths),],
col = "blue", size = 2) +
geom_point(data = accd[which.max(accd$deaths),],
col = "red", size = 2) +
geom_text(data = accd[which.max(accd$deaths),],
aes(label = deaths), vjust = 2.2) +
geom_text(data = accd[which.min(accd$deaths),],
aes(label = deaths), vjust = -2.2) +
theme_bw()
accd <- data.frame(deaths = as.matrix(accdeaths),
year = as.numeric(time(accdeaths)))
ggplot(accd, aes(x = year, y = deaths)) +
geom_line() +
geom_point(data = accd[which.min(accd$deaths),],
col = "blue", size = 2) +
geom_point(data = accd[which.max(accd$deaths),],
col = "red", size = 2) +
geom_text(data = accd[which.max(accd$deaths),],
aes(label = deaths), vjust = 2.2) +
geom_text(data = accd[which.min(accd$deaths),],
aes(label = deaths), vjust = -2.2) +
theme_bw()
alpha = 0.05
M = matrix(0, ncol=2, nrow=100)
z = qnorm(1-alpha/2)
for(i in 1:100){
X = rnorm(1000, 2,1)
M[i,1] = mean(X) - 1/sqrt(n)*z
M[i,2] = mean(X) + 1/sqrt(n)*z
}
alpha = 0.05
n = 1000
M = matrix(0, ncol=2, nrow=100)
z = qnorm(1-alpha/2)
for(i in 1:100){
X = rnorm(1000, 2,1)
M[i,1] = mean(X) - 1/sqrt(n)*z
M[i,2] = mean(X) + 1/sqrt(n)*z
}
M
plot(cars)
#Exercise_ 1
#1 - Draw a scatterplot (using geom_point) of the Age vs Weight.  When defining your aesthetics the Age will be the x and Weight will be the y.
data_weight <- weight_data %>% ggplot()
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
setwd("C:/Users/Raffaele/Downloads")
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
setwd("C:/Users/Raffaele/Desktop/Lezioni/R/homeworks")
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
#1 - Draw a scatterplot (using geom_point) of the Age vs Weight.  When defining your aesthetics the Age will be the x and Weight will be the y.
data_weight <- weight_data %>% ggplot()
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
library(tidyverse)
library(dplyr)
#1 - Draw a scatterplot (using geom_point) of the Age vs Weight.  When defining your aesthetics the Age will be the x and Weight will be the y.
data_weight <- weight_data %>% ggplot()
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight))
#2Make all of the points filled with blue2 by putting a fixed aesthetic
#into geom_point() and give them a size of 3
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#3- You will see that an obvious relationship exists between the two variables.  Change the geometry to geom_line to
#see another way to represent this plot.
data_weight + geom_line(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#4- Combine the two plots by adding both a geom_line and a geom_point geometry to show both the individual points and the overall trend.
data_weight + geom_line(aes(x = Age, y = Weight), size = 3, color="blue") + geom_point(aes(x = Age, y = Weight), size = 3, color="red")
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
library(tidyverse)
library(dplyr)
#1 - Draw a scatterplot (using geom_point) of the Age vs Weight.  When defining your aesthetics the Age will be the x and Weight will be the y.
data_weight <- weight_data %>% ggplot()
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight))
#2Make all of the points filled with blue2 by putting a fixed aesthetic
#into geom_point() and give them a size of 3
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#3- You will see that an obvious relationship exists between the two variables.  Change the geometry to geom_line to
#see another way to represent this plot.
data_weight + geom_line(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#4- Combine the two plots by adding both a geom_line and a geom_point geometry to show both the individual points and the overall trend.
data_weight + geom_line(aes(x = Age, y = Weight), size = 3, color="blue") + geom_point(aes(x = Age, y = Weight), size = 3, color="red")
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
library(tidyverse)
library(dplyr)
#1 - Draw a scatterplot (using geom_point) of the Age vs Weight.  When defining your aesthetics the Age will be the x and Weight will be the y.
data_weight <- weight_data %>% ggplot()
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight))
#2Make all of the points filled with blue2 by putting a fixed aesthetic
#into geom_point() and give them a size of 3
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#3- You will see that an obvious relationship exists between the two variables.  Change the geometry to geom_line to
#see another way to represent this plot.
data_weight + geom_line(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#4- Combine the two plots by adding both a geom_line and a geom_point geometry to show both the individual points and the overall trend.
data_weight + geom_line(aes(x = Age, y = Weight), size = 3, color="blue") + geom_point(aes(x = Age, y = Weight), size = 3, color="red")
#Exercise2
iris %>% ggplot(mapping = aes(x = Sepal.Length, y= Sepal.Width, color = Species)) +
geom_point(aes(shape = Species, color = Species)) + labs(title = "IRIS", x = "Sepal.Lenght", y = "Sepal.Width") +
theme_light() + geom_density_2d(bins = 15)
#Exercise_3
iris %>%
mutate(Species = 'ALL') %>% bind_rows(iris) %>%
ggplot(aes(x = Petal.Length, y = Petal.Width, color = Species)) +  geom_point() + geom_smooth() +
facet_wrap(facets =~ Species, scales = "free") +
theme_bw()
#Exercise_4
mtcars_a <- mtcars
mtcars_a$am[mtcars_a$am == 0] <- "automatic"
mtcars_a$am[mtcars_a$am == 1] <- "manual"
mtcars_a <- mtcars_a %>% rename(Gear = am)
mtcars_a %>% ggplot(aes(x = mpg, y = qsec, size = disp)) +
geom_point(aes(color = Gear)) +
labs(x = "miles per gallon", y = "1/4 mile time", size = "Displacement")  +  theme_light()
#Exercise_5
diamonds2plot <- diamonds %>%
group_by(cut, color) %>%
summarise(price = mean(price)) %>%
arrange(color, price) %>%
ungroup() %>%
mutate(id = row_number(),
angle = 90 - 360 * (id - 0.5) / n())
#Exercise_5
diamonds2plot <- diamonds %>%
group_by(cut, color) %>%
summarise(price = mean(price)) %>%
arrange(color, price) %>%
ungroup() %>%
mutate(id = row_number(),
angle = 90 - 360 * (id - 0.5) / n())
diamonds2plot  %>%
ggplot(aes(factor(id), price, fill = color, group = cut, label = cut)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values=c("salmon2", "darkgoldenrod3", "chartreuse3", "aquamarine3",
"cyan2",
"blueviolet",
"hotpink")) +
geom_text(hjust = 0, angle = diamonds2plot$angle, alpha = .5) +
coord_polar() +
ggtitle('Mean dimond price') +
ylim(-3000, 7000) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, size = 16, , face = 'bold'))
#Exercise 6
economics %>%
ggplot(aes(x = date, y = uempmed)) +
geom_line() +
expand_limits(y  = 0) +
ggtitle("Median duration of unemployment [weeks]") +
ylab("Median duration of unemployment [weeks]") +
ggthemes::theme_economist_white() +
theme(axis.title.x = element_blank())
#Exercise 6
economics %>%
ggplot(aes(x = date, y = uempmed)) +
geom_line() +
expand_limits(y  = 0) +
ggtitle("Median duration of unemployment in weeks") +
ylab("Median duration of unemployment in weeks") +
ggthemes::theme_economist_white() +
theme(axis.title.x = element_blank())
#Exercise_7
library(MASS)
library(viridis)
df <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(df)
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
library(tidyverse)
library(dplyr)
library(MASS)
library(viridis)
#Exercise_7
df <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(df)
#Exercise_7
library(data.table)
df <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(df)
ggplot(data = df, aes(x = bp, y = bmi)) +
stat_density_2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE)
#Exercise_7
library(data.table)
df <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(df)
ggplot(data = df, aes(x = bp, y = bmi)) +
stat_density_2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE)
#Exercise_7
library(data.table)
Pima_All <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(Pima_All)
ggplot(data = Pima_All, aes(x = bp, y = bmi)) +
stat_density_2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE)
#Exercise_7
Pima_All <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(Pima_All)
ggplot(data = Pima_All, aes(x = bp, y = bmi)) +
stat_density_2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE)
#Exercise_8
ggplot(data = df, aes(x = bmi)) +
geom_histogram(aes(y = ..density..), bins = 60) +
stat_function(fun = dnorm,
args = list(mean = mean(df$bmi, na.rm = TRUE),
sd = sd(df$bmi, na.rm = TRUE)),
lwd = 1,
col = 'red') +
expand_limits(x = 0)
#Exercise_8
ggplot(data = Pima_All, aes(x = bmi)) +
geom_histogram(aes(y = ..density..), bins = 60) +
stat_function(fun = dnorm,
args = list(mean = mean(Pima_All$bmi, na.rm = TRUE),
sd = sd(Pima_All$bmi, na.rm = TRUE)),
lwd = 1,
col = 'red') +
expand_limits(x = 0)
#Exercise_9
accd <- data.frame(deaths = as.matrix(accdeaths),
year = as.numeric(time(accdeaths)))
ggplot(accd, aes(x = year, y = deaths)) +
geom_line() +
geom_point(data = accd[which.min(accd$deaths),],
col = "blue", size = 2) +
geom_point(data = accd[which.max(accd$deaths),],
col = "red", size = 2) +
geom_text(data = accd[which.max(accd$deaths),],
aes(label = deaths), vjust = 2.2) +
geom_text(data = accd[which.min(accd$deaths),],
aes(label = deaths), vjust = -2.2) +
theme_bw()
#Exercise_9
ded <- data.frame(deaths = as.matrix(accdeaths),
year = as.numeric(time(accdeaths)))
ggplot(ded, aes(x = year, y = deaths)) +
geom_line() +
geom_point(data = ded[which.min(ded$deaths),],
col = "blue", size = 2) +
geom_point(data = ded[which.max(ded$deaths),],
col = "red", size = 2) +
geom_text(data = ded[which.max(ded$deaths),],
aes(label = deaths), vjust = 2.2) +
geom_text(data = ded[which.min(ded$deaths),],
aes(label = deaths), vjust = -2.2) +
theme_bw()
#Exercise_10
ggplot(data = cats, aes(x = Bwt, y = Hwt)) +
stat_density2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
facet_wrap(.~ Sex) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE) +
geom_point(shape = '.', col = 'white') +
labs(y = "Heart Weigth (g)", x = "Body Weight (kg)",
title = "Body Weight versus hearth weight (by gender)")
#Exercise_10
ggplot(data = cats, aes(x = Bwt, y = Hwt)) +
stat_density2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
facet_wrap(.~ Sex) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE) +
geom_point(shape = '.', col = 'white') +
labs(y = "Heart Weigth (g)", x = "Body Weight (kg)",
title = "Body Weight versus hearth weight by gender")
#Exercise_11
table(cut_number(pima_combine$age, 5))
ggplot(pima_combine, aes(x = age, y = glu)) +
geom_boxplot(aes(group = cut_number(age, 5)))
pima_combine
Pima_All
#Exercise_11
table(cut_number(pima_combine$age, 5))
ggplot(pima_combine, aes(x = age, y = glu)) +
geom_boxplot(aes(group = cut_number(age, 5)))
#Exercise_11
table(cut_number(Pima_All$age, 5))
ggplot(pima_combine, aes(x = age, y = glu)) +
geom_boxplot(aes(group = cut_number(age, 5)))
#Exercise_11
table(cut_number(pima_combine$age, 5))
ggplot(pima_combine, aes(x = age, y = glu)) +
geom_boxplot(aes(group = cut_number(age, 5)))
#Exercise_11
table(cut_number(Pima_All$age, 5))
ggplot(pima_combine, aes(x = age, y = glu)) +
geom_boxplot(aes(group = cut_number(age, 5)))
#Exercise_12
eco_data <- economics
setDT(eco_data)
eco_data[, `:=`(Punemploy = unemploy / pop, Pemploy = (pop - unemploy) / pop)]
ggplot(melt(eco_data, id.vars = "date", measure.vars = c("Punemploy", "Pemploy")), aes(x = date)) +
geom_bar(aes(y = value, fill = variable), stat = "identity", position = "stack") +
labs(y = "Percent", x = "Date", main = "Proportions of unemployed to employed")
#Exercise_12
e_data <- economics
setDT(e_data)
e_data[, `:=`(Punemploy = unemploy / pop, Pemploy = (pop - unemploy) / pop)]
ggplot(melt(e_data, id.vars = "date", measure.vars = c("Punemploy", "Pemploy")), aes(x = date)) +
geom_bar(aes(y = value, fill = variable), stat = "identity", position = "stack") +
labs(y = "Percent", x = "Date", main = "Proportions of unemployed to employed")
#Exercise_13
ms <- msleep
setDT(ms)
subdt <- ms[, group := ifelse(conservation == "domesticated", "Domes", "None")][order == "Artiodactyla"]
ggplot(data = subdt, aes(x = bodywt, y = sleep_total, color = group)) +
geom_point() +
geom_text(data = subdt[group == "Domes"], aes(label = name), vjust = 1.2) +
labs(title = "Body weight vs. Total sleep time of Artiodactyla",
x = "Body weight (kg)",
y = "Total sleep time (hour)") +
theme_bw()
#Exercise_14
ggplot(data = msleep, aes(x = sleep_total, fill = vore)) +
geom_density(alpha = .3, n = 25) +
labs(title = "Density plot for the total sleep",
y = "Density",
x = "Total sleep time (hour)") +
theme_bw()
#Exercise_ 1
weight_data <- read.delim("weight_chart.txt")
library(tidyverse)
library(dplyr)
library(MASS)
library(viridis)
library(data.table)
#1 - Draw a scatterplot (using geom_point) of the Age vs Weight.  When defining your aesthetics the Age will be the x and Weight will be the y.
data_weight <- weight_data %>% ggplot()
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight))
#2Make all of the points filled with blue2 by putting a fixed aesthetic
#into geom_point() and give them a size of 3
data_weight + geom_point(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#3- You will see that an obvious relationship exists between the two variables.  Change the geometry to geom_line to
#see another way to represent this plot.
data_weight + geom_line(aes(x = weight_data$Age, y = weight_data$Weight), size = 3, color="blue")
#4- Combine the two plots by adding both a geom_line and a geom_point geometry to show both the individual points and the overall trend.
data_weight + geom_line(aes(x = Age, y = Weight), size = 3, color="blue") + geom_point(aes(x = Age, y = Weight), size = 3, color="red")
#Exercise_2
iris %>% ggplot(mapping = aes(x = Sepal.Length, y= Sepal.Width, color = Species)) +
geom_point(aes(shape = Species, color = Species)) + labs(title = "IRIS", x = "Sepal.Lenght", y = "Sepal.Width") +
theme_light() + geom_density_2d(bins = 15)
#Exercise_3
iris %>%
mutate(Species = 'ALL') %>% bind_rows(iris) %>%
ggplot(aes(x = Petal.Length, y = Petal.Width, color = Species)) +  geom_point() + geom_smooth() +
facet_wrap(facets =~ Species, scales = "free") +
theme_bw()
#Exercise_4
mtcars_a <- mtcars
mtcars_a$am[mtcars_a$am == 0] <- "automatic"
mtcars_a$am[mtcars_a$am == 1] <- "manual"
mtcars_a <- mtcars_a %>% rename(Gear = am)
mtcars_a %>% ggplot(aes(x = mpg, y = qsec, size = disp)) +
geom_point(aes(color = Gear)) +
labs(x = "miles per gallon", y = "1/4 mile time", size = "Displacement")  +  theme_light()
#Exercise_5
diamonds2plot <- diamonds %>%
group_by(cut, color) %>%
summarise(price = mean(price)) %>%
arrange(color, price) %>%
ungroup() %>%
mutate(id = row_number(),
angle = 90 - 360 * (id - 0.5) / n())
diamonds2plot  %>%
ggplot(aes(factor(id), price, fill = color, group = cut, label = cut)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values=c("salmon2", "darkgoldenrod3", "chartreuse3", "aquamarine3",
"cyan2",
"blueviolet",
"hotpink")) +
geom_text(hjust = 0, angle = diamonds2plot$angle, alpha = .5) +
coord_polar() +
ggtitle('Mean dimond price') +
ylim(-3000, 7000) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, size = 16, , face = 'bold'))
#Exercise_6
economics %>%
ggplot(aes(x = date, y = uempmed)) +
geom_line() +
expand_limits(y  = 0) +
ggtitle("Median duration of unemployment in weeks") +
ylab("Median duration of unemployment in weeks") +
ggthemes::theme_economist_white() +
theme(axis.title.x = element_blank())
#Exercise_7
Pima_All <- rbind(Pima.te, Pima.tr, Pima.tr2)
setDT(Pima_All)
ggplot(data = Pima_All, aes(x = bp, y = bmi)) +
stat_density_2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE)
#Exercise_8
ggplot(data = Pima_All, aes(x = bmi)) +
geom_histogram(aes(y = ..density..), bins = 60) +
stat_function(fun = dnorm,
args = list(mean = mean(Pima_All$bmi, na.rm = TRUE),
sd = sd(Pima_All$bmi, na.rm = TRUE)),
lwd = 1,
col = 'red') +
expand_limits(x = 0)
#Exercise_9
ded <- data.frame(deaths = as.matrix(accdeaths),
year = as.numeric(time(accdeaths)))
ggplot(ded, aes(x = year, y = deaths)) +
geom_line() +
geom_point(data = ded[which.min(ded$deaths),],
col = "blue", size = 2) +
geom_point(data = ded[which.max(ded$deaths),],
col = "red", size = 2) +
geom_text(data = ded[which.max(ded$deaths),],
aes(label = deaths), vjust = 2.2) +
geom_text(data = ded[which.min(ded$deaths),],
aes(label = deaths), vjust = -2.2) +
theme_bw()
#Exercise_10
ggplot(data = cats, aes(x = Bwt, y = Hwt)) +
stat_density2d(geom = "raster", aes(fill = stat(density)), contour = FALSE) +
facet_wrap(.~ Sex) +
scale_fill_viridis() +
coord_cartesian(expand = FALSE) +
geom_point(shape = '.', col = 'white') +
labs(y = "Heart Weigth (g)", x = "Body Weight (kg)",
title = "Body Weight versus hearth weight by gender")
#Exercise_12
e_data <- economics
setDT(e_data)
e_data[, `:=`(Punemploy = unemploy / pop, Pemploy = (pop - unemploy) / pop)]
ggplot(melt(e_data, id.vars = "date", measure.vars = c("Punemploy", "Pemploy")), aes(x = date)) +
geom_bar(aes(y = value, fill = variable), stat = "identity", position = "stack") +
labs(y = "Percent", x = "Date", main = "Proportions of unemployed to employed")
#Exercise_13
ms <- msleep
setDT(ms)
subdt <- ms[, group := ifelse(conservation == "domesticated", "Domes", "None")][order == "Artiodactyla"]
ggplot(data = subdt, aes(x = bodywt, y = sleep_total, color = group)) +
geom_point() +
geom_text(data = subdt[group == "Domes"], aes(label = name), vjust = 1.2) +
labs(title = "Body weight vs. Total sleep time of Artiodactyla",
x = "Body weight (kg)",
y = "Total sleep time (hour)") +
theme_bw()
#Exercise_14
ggplot(data = msleep, aes(x = sleep_total, fill = vore)) +
geom_density(alpha = .3, n = 25) +
labs(title = "Density plot for the  sleep (total)",
y = "Density",
x = "Total sleep time per hour") +
theme_bw()
shiny::runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp()
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
textInput(inputId = "name1",
label = "Enter first name"),
textInput(inputId = "name2",
label = "Enter last name"),
textInput(inputId = "height",
label = "Enter approximate height(cm)"),
textOutput(outputId = "text")
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$text <- renderText({
paste0("Hello", input$name1, input$name2, "You're approximally", input$height, "tall");
})
}
# Run the application
shinyApp(ui = ui, server = server)
output$text1 <- renderText({
paste0("Hello", input$name1, input$name2, "You're approximally", input$height, "tall");
})
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp('C:/Users/Raffaele/Desktop/Lezioni/data_visualizzation_with_R/IShiny/FIRST_TRY_SHINY')
runApp('C:/Users/Raffaele/Downloads/firstshinyapp.R')
runApp('C:/Users/Raffaele/Downloads/firstshinyapp.R')
runApp('C:/Users/Raffaele/Downloads/firstshinyapp.R')
runApp('C:/Users/Raffaele/Downloads/firstshinyapp.R')
